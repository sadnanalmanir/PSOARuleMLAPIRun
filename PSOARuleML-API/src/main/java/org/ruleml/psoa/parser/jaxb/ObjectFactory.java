//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.10 at 03:21:02 PM AST 
//


package org.ruleml.psoa.parser.jaxb;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.ruleml.psoa.parser.jaxb package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Expansion_QNAME = new QName("http://www.w3.org/2011/psoa#", "expansion");
    private final static QName _Location_QNAME = new QName("http://www.w3.org/2011/psoa#", "location");
    private final static QName _Name_QNAME = new QName("http://www.w3.org/2011/psoa#", "name");
    private final static QName _Absiri_QNAME = new QName("http://www.w3.org/2011/psoa#", "absiri");
    private final static QName _Profile_QNAME = new QName("http://www.w3.org/2011/psoa#", "profile");
    private final static QName _SlotPSOATypeExternal_QNAME = new QName("http://www.w3.org/2011/psoa#", "External");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.ruleml.psoa.parser.jaxb
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Forall }
     * 
     */
    public Forall createForall() {
        return new Forall();
    }

    /**
     * Create an instance of {@link Base }
     * 
     */
    public Base createBase() {
        return new Base();
    }

    /**
     * Create an instance of {@link Sub }
     * 
     */
    public Sub createSub() {
        return new Sub();
    }

    /**
     * Create an instance of {@link Ind }
     * 
     */
    public Ind createInd() {
        return new Ind();
    }

    /**
     * Create an instance of {@link Id }
     * 
     */
    public Id createId() {
        return new Id();
    }

    /**
     * Create an instance of {@link IRICONSTType }
     * 
     */
    public IRICONSTType createIRICONSTType() {
        return new IRICONSTType();
    }

    /**
     * Create an instance of {@link Meta }
     * 
     */
    public Meta createMeta() {
        return new Meta();
    }

    /**
     * Create an instance of {@link AndMetaType }
     * 
     */
    public AndMetaType createAndMetaType() {
        return new AndMetaType();
    }

    /**
     * Create an instance of {@link Rel }
     * 
     */
    public Rel createRel() {
        return new Rel();
    }

    /**
     * Create an instance of {@link Var }
     * 
     */
    public Var createVar() {
        return new Var();
    }

    /**
     * Create an instance of {@link Expr }
     * 
     */
    public Expr createExpr() {
        return new Expr();
    }

    /**
     * Create an instance of {@link Oid }
     * 
     */
    public Oid createOid() {
        return new Oid();
    }

    /**
     * Create an instance of {@link ExternalTERMType }
     * 
     */
    public ExternalTERMType createExternalTERMType() {
        return new ExternalTERMType();
    }

    /**
     * Create an instance of {@link Op }
     * 
     */
    public Op createOp() {
        return new Op();
    }

    /**
     * Create an instance of {@link Args }
     * 
     */
    public Args createArgs() {
        return new Args();
    }

    /**
     * Create an instance of {@link SlotPSOAType }
     * 
     */
    public SlotPSOAType createSlotPSOAType() {
        return new SlotPSOAType();
    }

    /**
     * Create an instance of {@link Import }
     * 
     */
    public Import createImport() {
        return new Import();
    }

    /**
     * Create an instance of {@link Implies }
     * 
     */
    public Implies createImplies() {
        return new Implies();
    }

    /**
     * Create an instance of {@link If }
     * 
     */
    public If createIf() {
        return new If();
    }

    /**
     * Create an instance of {@link And }
     * 
     */
    public And createAnd() {
        return new And();
    }

    /**
     * Create an instance of {@link org.ruleml.psoa.parser.jaxb.Formula }
     * 
     */
    public org.ruleml.psoa.parser.jaxb.Formula createFormula() {
        return new org.ruleml.psoa.parser.jaxb.Formula();
    }

    /**
     * Create an instance of {@link Or }
     * 
     */
    public Or createOr() {
        return new Or();
    }

    /**
     * Create an instance of {@link Exists }
     * 
     */
    public Exists createExists() {
        return new Exists();
    }

    /**
     * Create an instance of {@link Declare }
     * 
     */
    public Declare createDeclare() {
        return new Declare();
    }

    /**
     * Create an instance of {@link Atom }
     * 
     */
    public Atom createAtom() {
        return new Atom();
    }

    /**
     * Create an instance of {@link Equal }
     * 
     */
    public Equal createEqual() {
        return new Equal();
    }

    /**
     * Create an instance of {@link Left }
     * 
     */
    public Left createLeft() {
        return new Left();
    }

    /**
     * Create an instance of {@link Right }
     * 
     */
    public Right createRight() {
        return new Right();
    }

    /**
     * Create an instance of {@link Subclass }
     * 
     */
    public Subclass createSubclass() {
        return new Subclass();
    }

    /**
     * Create an instance of {@link Super }
     * 
     */
    public Super createSuper() {
        return new Super();
    }

    /**
     * Create an instance of {@link ExternalFORMULAType }
     * 
     */
    public ExternalFORMULAType createExternalFORMULAType() {
        return new ExternalFORMULAType();
    }

    /**
     * Create an instance of {@link Then }
     * 
     */
    public Then createThen() {
        return new Then();
    }

    /**
     * Create an instance of {@link ExistsThenType }
     * 
     */
    public ExistsThenType createExistsThenType() {
        return new ExistsThenType();
    }

    /**
     * Create an instance of {@link AndThenType }
     * 
     */
    public AndThenType createAndThenType() {
        return new AndThenType();
    }

    /**
     * Create an instance of {@link Sentence }
     * 
     */
    public Sentence createSentence() {
        return new Sentence();
    }

    /**
     * Create an instance of {@link Forall.Formula }
     * 
     */
    public Forall.Formula createForallFormula() {
        return new Forall.Formula();
    }

    /**
     * Create an instance of {@link Group }
     * 
     */
    public Group createGroup() {
        return new Group();
    }

    /**
     * Create an instance of {@link Payload }
     * 
     */
    public Payload createPayload() {
        return new Payload();
    }

    /**
     * Create an instance of {@link Directive }
     * 
     */
    public Directive createDirective() {
        return new Directive();
    }

    /**
     * Create an instance of {@link Prefix }
     * 
     */
    public Prefix createPrefix() {
        return new Prefix();
    }

    /**
     * Create an instance of {@link Document }
     * 
     */
    public Document createDocument() {
        return new Document();
    }

    /**
     * Create an instance of {@link FormulaAndThenType }
     * 
     */
    public FormulaAndThenType createFormulaAndThenType() {
        return new FormulaAndThenType();
    }

    /**
     * Create an instance of {@link FormulaExistsThenType }
     * 
     */
    public FormulaExistsThenType createFormulaExistsThenType() {
        return new FormulaExistsThenType();
    }

    /**
     * Create an instance of {@link ContentFORMULAType }
     * 
     */
    public ContentFORMULAType createContentFORMULAType() {
        return new ContentFORMULAType();
    }

    /**
     * Create an instance of {@link ContentTERMType }
     * 
     */
    public ContentTERMType createContentTERMType() {
        return new ContentTERMType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/2011/psoa#", name = "expansion")
    public JAXBElement<String> createExpansion(String value) {
        return new JAXBElement<String>(_Expansion_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/2011/psoa#", name = "location")
    public JAXBElement<String> createLocation(String value) {
        return new JAXBElement<String>(_Location_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/2011/psoa#", name = "name")
    public JAXBElement<String> createName(String value) {
        return new JAXBElement<String>(_Name_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/2011/psoa#", name = "absiri")
    public JAXBElement<String> createAbsiri(String value) {
        return new JAXBElement<String>(_Absiri_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/2011/psoa#", name = "profile")
    public JAXBElement<String> createProfile(String value) {
        return new JAXBElement<String>(_Profile_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExternalTERMType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3.org/2011/psoa#", name = "External", scope = SlotPSOAType.class)
    public JAXBElement<ExternalTERMType> createSlotPSOATypeExternal(ExternalTERMType value) {
        return new JAXBElement<ExternalTERMType>(_SlotPSOATypeExternal_QNAME, ExternalTERMType.class, SlotPSOAType.class, value);
    }

}
