<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_20) on Tue Apr 03 15:57:06 ADT 2012 -->
<TITLE>
C-Index
</TITLE>

<META NAME="date" CONTENT="2012-04-03">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="C-Index";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="index-2.html"><B>PREV LETTER</B></A>&nbsp;
&nbsp;<A HREF="index-4.html"><B>NEXT LETTER</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?index-filesindex-3.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-3.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<A HREF="index-1.html">A</A> <A HREF="index-2.html">B</A> <A HREF="index-3.html">C</A> <A HREF="index-4.html">D</A> <A HREF="index-5.html">E</A> <A HREF="index-6.html">F</A> <A HREF="index-7.html">G</A> <A HREF="index-8.html">I</A> <A HREF="index-9.html">L</A> <A HREF="index-10.html">M</A> <A HREF="index-11.html">O</A> <A HREF="index-12.html">P</A> <A HREF="index-13.html">R</A> <A HREF="index-14.html">S</A> <A HREF="index-15.html">T</A> <A HREF="index-16.html">V</A> <HR>
<A NAME="_C_"><!-- --></A><H2>
<B>C</B></H2>
<DL>
<DT><A HREF="../psoa/ruleml/parser/jaxb/Class.html" title="class in psoa.ruleml.parser.jaxb"><B>Class</B></A> - Class in <A HREF="../psoa/ruleml/parser/jaxb/package-summary.html">psoa.ruleml.parser.jaxb</A><DD>Java class for anonymous complex type.<DT><A HREF="../psoa/ruleml/parser/jaxb/Class.html#Class()"><B>Class()</B></A> - 
Constructor for class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/Class.html" title="class in psoa.ruleml.parser.jaxb">Class</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.Const_Constshort.html#compareTo(psoa.ruleml.AbstractSyntax.Term)"><B>compareTo(AbstractSyntax.Term)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.Const_Constshort.html" title="class in psoa.ruleml">DefaultAbstractSyntax.Const_Constshort</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.Const_Literal.html#compareTo(psoa.ruleml.AbstractSyntax.Term)"><B>compareTo(AbstractSyntax.Term)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.Const_Literal.html" title="class in psoa.ruleml">DefaultAbstractSyntax.Const_Literal</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.External.html#compareTo(psoa.ruleml.AbstractSyntax.Term)"><B>compareTo(AbstractSyntax.Term)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.External.html" title="class in psoa.ruleml">DefaultAbstractSyntax.External</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.Psoa.html#compareTo(psoa.ruleml.AbstractSyntax.Term)"><B>compareTo(AbstractSyntax.Term)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.Psoa.html" title="class in psoa.ruleml">DefaultAbstractSyntax.Psoa</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.Term.html#compareTo(psoa.ruleml.AbstractSyntax.Term)"><B>compareTo(AbstractSyntax.Term)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.Term.html" title="class in psoa.ruleml">DefaultAbstractSyntax.Term</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.Var.html#compareTo(psoa.ruleml.AbstractSyntax.Term)"><B>compareTo(AbstractSyntax.Term)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.Var.html" title="class in psoa.ruleml">DefaultAbstractSyntax.Var</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/Const.html" title="class in psoa.ruleml.parser.jaxb"><B>Const</B></A> - Class in <A HREF="../psoa/ruleml/parser/jaxb/package-summary.html">psoa.ruleml.parser.jaxb</A><DD>Java class for anonymous complex type.<DT><A HREF="../psoa/ruleml/parser/jaxb/Const.html#Const()"><B>Const()</B></A> - 
Constructor for class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/Const.html" title="class in psoa.ruleml.parser.jaxb">Const</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ContentFORMULAType.html" title="class in psoa.ruleml.parser.jaxb"><B>ContentFORMULAType</B></A> - Class in <A HREF="../psoa/ruleml/parser/jaxb/package-summary.html">psoa.ruleml.parser.jaxb</A><DD>Java class for content-FORMULA.type complex type.<DT><A HREF="../psoa/ruleml/parser/jaxb/ContentFORMULAType.html#ContentFORMULAType()"><B>ContentFORMULAType()</B></A> - 
Constructor for class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ContentFORMULAType.html" title="class in psoa.ruleml.parser.jaxb">ContentFORMULAType</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ContentTERMType.html" title="class in psoa.ruleml.parser.jaxb"><B>ContentTERMType</B></A> - Class in <A HREF="../psoa/ruleml/parser/jaxb/package-summary.html">psoa.ruleml.parser.jaxb</A><DD>Java class for content-TERM.type complex type.<DT><A HREF="../psoa/ruleml/parser/jaxb/ContentTERMType.html#ContentTERMType()"><B>ContentTERMType()</B></A> - 
Constructor for class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ContentTERMType.html" title="class in psoa.ruleml.parser.jaxb">ContentTERMType</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createAbsiri(java.lang.String)"><B>createAbsiri(String)</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <CODE>JAXBElement</CODE><code>&lt;</code><CODE>String</CODE><code>&gt;</code>}
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createAnd()"><B>createAnd()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/And.html" title="class in psoa.ruleml.parser.jaxb"><CODE>And</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createAndMetaType()"><B>createAndMetaType()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/AndMetaType.html" title="class in psoa.ruleml.parser.jaxb"><CODE>AndMetaType</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createAndThenType()"><B>createAndThenType()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/AndThenType.html" title="class in psoa.ruleml.parser.jaxb"><CODE>AndThenType</CODE></A>
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createAtom(psoa.ruleml.AbstractSyntax.Psoa)"><B>createAtom(AbstractSyntax.Psoa)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createAtom(psoa.ruleml.AbstractSyntax.Psoa)"><B>createAtom(AbstractSyntax.Psoa)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createAtom()"><B>createAtom()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Atom.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Atom</CODE></A>
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createBase(java.lang.String)"><B>createBase(String)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createBase(java.lang.String)"><B>createBase(String)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createBase()"><B>createBase()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Base.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Base</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createClass()"><B>createClass()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Class.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Class</CODE></A>
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createClause(psoa.ruleml.AbstractSyntax.Implies)"><B>createClause(AbstractSyntax.Implies)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createClause(psoa.ruleml.AbstractSyntax.Atomic)"><B>createClause(AbstractSyntax.Atomic)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createClause(psoa.ruleml.AbstractSyntax.Implies)"><B>createClause(AbstractSyntax.Implies)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createClause(psoa.ruleml.AbstractSyntax.Atomic)"><B>createClause(AbstractSyntax.Atomic)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createConst()"><B>createConst()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Const.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Const</CODE></A>
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createConst_Constshort(java.lang.String)"><B>createConst_Constshort(String)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createConst_Constshort(java.lang.String)"><B>createConst_Constshort(String)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createConst_Literal(java.lang.String, psoa.ruleml.AbstractSyntax.Symspace)"><B>createConst_Literal(String, AbstractSyntax.Symspace)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createConst_Literal(java.lang.String, psoa.ruleml.AbstractSyntax.Symspace)"><B>createConst_Literal(String, AbstractSyntax.Symspace)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createContentFORMULAType()"><B>createContentFORMULAType()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/ContentFORMULAType.html" title="class in psoa.ruleml.parser.jaxb"><CODE>ContentFORMULAType</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createContentTERMType()"><B>createContentTERMType()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/ContentTERMType.html" title="class in psoa.ruleml.parser.jaxb"><CODE>ContentTERMType</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createDeclare()"><B>createDeclare()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Declare.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Declare</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createDirective()"><B>createDirective()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Directive.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Directive</CODE></A>
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createDocument(psoa.ruleml.AbstractSyntax.Base, java.lang.Iterable, java.lang.Iterable, psoa.ruleml.AbstractSyntax.Group)"><B>createDocument(AbstractSyntax.Base, Iterable&lt;AbstractSyntax.Prefix&gt;, Iterable&lt;AbstractSyntax.Import&gt;, AbstractSyntax.Group)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createDocument(psoa.ruleml.AbstractSyntax.Base, java.lang.Iterable, java.lang.Iterable, psoa.ruleml.AbstractSyntax.Group)"><B>createDocument(AbstractSyntax.Base, Iterable&lt;AbstractSyntax.Prefix&gt;, Iterable&lt;AbstractSyntax.Import&gt;, AbstractSyntax.Group)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createDocument()"><B>createDocument()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Document.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Document</CODE></A>
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createEqual(psoa.ruleml.AbstractSyntax.Term, psoa.ruleml.AbstractSyntax.Term)"><B>createEqual(AbstractSyntax.Term, AbstractSyntax.Term)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createEqual(psoa.ruleml.AbstractSyntax.Term, psoa.ruleml.AbstractSyntax.Term)"><B>createEqual(AbstractSyntax.Term, AbstractSyntax.Term)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createEqual()"><B>createEqual()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Equal.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Equal</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createExists()"><B>createExists()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Exists.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Exists</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createExistsThenType()"><B>createExistsThenType()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/ExistsThenType.html" title="class in psoa.ruleml.parser.jaxb"><CODE>ExistsThenType</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createExpansion(java.lang.String)"><B>createExpansion(String)</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <CODE>JAXBElement</CODE><code>&lt;</code><CODE>String</CODE><code>&gt;</code>}
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createExpr()"><B>createExpr()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Expr.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Expr</CODE></A>
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createExternalExpr(psoa.ruleml.AbstractSyntax.Psoa)"><B>createExternalExpr(AbstractSyntax.Psoa)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createExternalExpr(psoa.ruleml.AbstractSyntax.Psoa)"><B>createExternalExpr(AbstractSyntax.Psoa)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createExternalFORMULAType()"><B>createExternalFORMULAType()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/ExternalFORMULAType.html" title="class in psoa.ruleml.parser.jaxb"><CODE>ExternalFORMULAType</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createExternalTERMType()"><B>createExternalTERMType()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/ExternalTERMType.html" title="class in psoa.ruleml.parser.jaxb"><CODE>ExternalTERMType</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createForall()"><B>createForall()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Forall.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Forall</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createForallFormula()"><B>createForallFormula()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Forall.Formula.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Forall.Formula</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createFormula()"><B>createFormula()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Formula.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Formula</CODE></A>
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createFormula_And(java.lang.Iterable)"><B>createFormula_And(Iterable&lt;AbstractSyntax.Formula&gt;)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>Creates conjunction.
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createFormula_And(java.lang.Iterable)"><B>createFormula_And(Iterable&lt;AbstractSyntax.Formula&gt;)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>Creates conjunction.
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createFormula_Exists(java.lang.Iterable, psoa.ruleml.AbstractSyntax.Formula)"><B>createFormula_Exists(Iterable&lt;AbstractSyntax.Var&gt;, AbstractSyntax.Formula)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>Creates existentially quantified formula.
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createFormula_Exists(java.lang.Iterable, psoa.ruleml.AbstractSyntax.Formula)"><B>createFormula_Exists(Iterable&lt;AbstractSyntax.Var&gt;, AbstractSyntax.Formula)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>Creates existentially quantified formula.
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createFormula_External(psoa.ruleml.AbstractSyntax.Atom)"><B>createFormula_External(AbstractSyntax.Atom)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createFormula_External(psoa.ruleml.AbstractSyntax.Atom)"><B>createFormula_External(AbstractSyntax.Atom)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createFormula_Or(java.lang.Iterable)"><B>createFormula_Or(Iterable&lt;AbstractSyntax.Formula&gt;)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>Creates disjunction.
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createFormula_Or(java.lang.Iterable)"><B>createFormula_Or(Iterable&lt;AbstractSyntax.Formula&gt;)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>Creates disjunction.
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createFormulaAndThenType()"><B>createFormulaAndThenType()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/FormulaAndThenType.html" title="class in psoa.ruleml.parser.jaxb"><CODE>FormulaAndThenType</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createFormulaExistsThenType()"><B>createFormulaExistsThenType()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/FormulaExistsThenType.html" title="class in psoa.ruleml.parser.jaxb"><CODE>FormulaExistsThenType</CODE></A>
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createGroup(java.lang.Iterable)"><B>createGroup(Iterable&lt;AbstractSyntax.GroupElement&gt;)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createGroup(java.lang.Iterable)"><B>createGroup(Iterable&lt;AbstractSyntax.GroupElement&gt;)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createGroup()"><B>createGroup()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Group.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Group</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createGroupelement()"><B>createGroupelement()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Groupelement.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Groupelement</CODE></A>
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createHead(java.lang.Iterable, psoa.ruleml.AbstractSyntax.Atomic)"><B>createHead(Iterable&lt;AbstractSyntax.Var&gt;, AbstractSyntax.Atomic)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>Creates a rule head by applying an exitential quantifier
  over the given variables to the formula.
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createHead(java.lang.Iterable, psoa.ruleml.AbstractSyntax.Atomic)"><B>createHead(Iterable&lt;AbstractSyntax.Var&gt;, AbstractSyntax.Atomic)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>Creates a rule head by applying an exitential quantifier over the given
 variables to the formula.
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createId()"><B>createId()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Id.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Id</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createIf()"><B>createIf()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/If.html" title="class in psoa.ruleml.parser.jaxb"><CODE>If</CODE></A>
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createImplies(java.lang.Iterable, psoa.ruleml.AbstractSyntax.Formula)"><B>createImplies(Iterable&lt;AbstractSyntax.Head&gt;, AbstractSyntax.Formula)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createImplies(java.lang.Iterable, psoa.ruleml.AbstractSyntax.Formula)"><B>createImplies(Iterable&lt;AbstractSyntax.Head&gt;, AbstractSyntax.Formula)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createImplies()"><B>createImplies()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Implies.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Implies</CODE></A>
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createImport(java.lang.String, psoa.ruleml.AbstractSyntax.Profile)"><B>createImport(String, AbstractSyntax.Profile)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createImport(java.lang.String, psoa.ruleml.AbstractSyntax.Profile)"><B>createImport(String, AbstractSyntax.Profile)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createImport()"><B>createImport()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Import.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Import</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createInstance()"><B>createInstance()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Instance.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Instance</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createIRICONSTType()"><B>createIRICONSTType()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/IRICONSTType.html" title="class in psoa.ruleml.parser.jaxb"><CODE>IRICONSTType</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createLeft()"><B>createLeft()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Left.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Left</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createLocation(java.lang.String)"><B>createLocation(String)</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <CODE>JAXBElement</CODE><code>&lt;</code><CODE>String</CODE><code>&gt;</code>}
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createMember()"><B>createMember()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Member.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Member</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createMeta()"><B>createMeta()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Meta.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Meta</CODE></A>
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createName(java.lang.String)"><B>createName(String)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createName(java.lang.String)"><B>createName(String)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createName(java.lang.String)"><B>createName(String)</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <CODE>JAXBElement</CODE><code>&lt;</code><CODE>String</CODE><code>&gt;</code>}
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createOr()"><B>createOr()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Or.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Or</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createPayload()"><B>createPayload()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Payload.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Payload</CODE></A>
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createPrefix(psoa.ruleml.AbstractSyntax.Name, java.lang.String)"><B>createPrefix(AbstractSyntax.Name, String)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createPrefix(psoa.ruleml.AbstractSyntax.Name, java.lang.String)"><B>createPrefix(AbstractSyntax.Name, String)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createPrefix()"><B>createPrefix()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Prefix.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Prefix</CODE></A>
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createProfile(java.lang.String)"><B>createProfile(String)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createProfile(java.lang.String)"><B>createProfile(String)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createProfile(java.lang.String)"><B>createProfile(String)</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <CODE>JAXBElement</CODE><code>&lt;</code><CODE>String</CODE><code>&gt;</code>}
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createPsoa(psoa.ruleml.AbstractSyntax.Term, psoa.ruleml.AbstractSyntax.Term, java.lang.Iterable, java.lang.Iterable)"><B>createPsoa(AbstractSyntax.Term, AbstractSyntax.Term, Iterable&lt;AbstractSyntax.Tuple&gt;, Iterable&lt;AbstractSyntax.Slot&gt;)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createPsoa(psoa.ruleml.AbstractSyntax.Term, psoa.ruleml.AbstractSyntax.Term, java.lang.Iterable, java.lang.Iterable)"><B>createPsoa(AbstractSyntax.Term, AbstractSyntax.Term, Iterable&lt;AbstractSyntax.Tuple&gt;, Iterable&lt;AbstractSyntax.Slot&gt;)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createRight()"><B>createRight()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Right.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Right</CODE></A>
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createRule(java.lang.Iterable, psoa.ruleml.AbstractSyntax.Clause)"><B>createRule(Iterable&lt;AbstractSyntax.Var&gt;, AbstractSyntax.Clause)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createRule(java.lang.Iterable, psoa.ruleml.AbstractSyntax.Clause)"><B>createRule(Iterable&lt;AbstractSyntax.Var&gt;, AbstractSyntax.Clause)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createSlot(psoa.ruleml.AbstractSyntax.Term, psoa.ruleml.AbstractSyntax.Term)"><B>createSlot(AbstractSyntax.Term, AbstractSyntax.Term)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createSlot(psoa.ruleml.AbstractSyntax.Term, psoa.ruleml.AbstractSyntax.Term)"><B>createSlot(AbstractSyntax.Term, AbstractSyntax.Term)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createSlotPSOAType()"><B>createSlotPSOAType()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/SlotPSOAType.html" title="class in psoa.ruleml.parser.jaxb"><CODE>SlotPSOAType</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createSlotPSOATypeExternal(psoa.ruleml.parser.jaxb.ExternalTERMType)"><B>createSlotPSOATypeExternal(ExternalTERMType)</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <CODE>JAXBElement</CODE><code>&lt;</code><A HREF="../psoa/ruleml/parser/jaxb/ExternalTERMType.html" title="class in psoa.ruleml.parser.jaxb"><CODE>ExternalTERMType</CODE></A><code>&gt;</code>}
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createSub()"><B>createSub()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Sub.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Sub</CODE></A>
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createSubclass(psoa.ruleml.AbstractSyntax.Term, psoa.ruleml.AbstractSyntax.Term)"><B>createSubclass(AbstractSyntax.Term, AbstractSyntax.Term)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createSubclass(psoa.ruleml.AbstractSyntax.Term, psoa.ruleml.AbstractSyntax.Term)"><B>createSubclass(AbstractSyntax.Term, AbstractSyntax.Term)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createSubclass()"><B>createSubclass()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Subclass.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Subclass</CODE></A>
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createSuper()"><B>createSuper()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Super.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Super</CODE></A>
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createSymspace(java.lang.String)"><B>createSymspace(String)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>Temporary plug.
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createSymspace(java.lang.String)"><B>createSymspace(String)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>Temporary plug.
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createThen()"><B>createThen()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Then.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Then</CODE></A>
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createTuple(java.lang.Iterable)"><B>createTuple(Iterable&lt;AbstractSyntax.Term&gt;)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createTuple(java.lang.Iterable)"><B>createTuple(Iterable&lt;AbstractSyntax.Term&gt;)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createTuple()"><B>createTuple()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Tuple.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Tuple</CODE></A>
<DT><A HREF="../psoa/ruleml/AbstractSyntax.html#createVar(java.lang.String)"><B>createVar(String)</B></A> - 
Method in interface psoa.ruleml.<A HREF="../psoa/ruleml/AbstractSyntax.html" title="interface in psoa.ruleml">AbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/DefaultAbstractSyntax.html#createVar(java.lang.String)"><B>createVar(String)</B></A> - 
Method in class psoa.ruleml.<A HREF="../psoa/ruleml/DefaultAbstractSyntax.html" title="class in psoa.ruleml">DefaultAbstractSyntax</A>
<DD>&nbsp;
<DT><A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html#createVar()"><B>createVar()</B></A> - 
Method in class psoa.ruleml.parser.jaxb.<A HREF="../psoa/ruleml/parser/jaxb/ObjectFactory.html" title="class in psoa.ruleml.parser.jaxb">ObjectFactory</A>
<DD>Create an instance of <A HREF="../psoa/ruleml/parser/jaxb/Var.html" title="class in psoa.ruleml.parser.jaxb"><CODE>Var</CODE></A>
</DL>
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="index-2.html"><B>PREV LETTER</B></A>&nbsp;
&nbsp;<A HREF="index-4.html"><B>NEXT LETTER</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?index-filesindex-3.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-3.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<A HREF="index-1.html">A</A> <A HREF="index-2.html">B</A> <A HREF="index-3.html">C</A> <A HREF="index-4.html">D</A> <A HREF="index-5.html">E</A> <A HREF="index-6.html">F</A> <A HREF="index-7.html">G</A> <A HREF="index-8.html">I</A> <A HREF="index-9.html">L</A> <A HREF="index-10.html">M</A> <A HREF="index-11.html">O</A> <A HREF="index-12.html">P</A> <A HREF="index-13.html">R</A> <A HREF="index-14.html">S</A> <A HREF="index-15.html">T</A> <A HREF="index-16.html">V</A> <HR>

</BODY>
</HTML>
